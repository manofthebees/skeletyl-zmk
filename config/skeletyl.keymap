#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1650  // default is 600

&mmv { delay-ms = <0>; };

/ {
    behaviors {
        mouse_mode: mouse_mode {
            compatible = "zmk,behavior-hold-tap";
            label = "MOUSE_MODE";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <125>;
            flavor = "tap-preferred";
            quick-tap-ms = <75>;
        };

        holding_tapping: holding_tapping {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLDING_TAPPING";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <125>;
            quick-tap-ms = <75>;
            flavor = "tap-preferred";
        };
    };

    combos {
        compatible = "zmk,combos";

        dash_moment {
            bindings = <&kp MINUS>;
            key-positions = <18 19>;
            layers = <0>;
        };

        tab_moment {
            bindings = <&kp TAB>;
            key-positions = <10 11 12>;
            layers = <0>;
        };

        semicolon {
            bindings = <&kp SEMICOLON>;
            key-positions = <29 19>;
            layers = <0>;
        };

        tilde_moment {
            bindings = <&kp GRAVE>;
            key-positions = <21 20>;
            layers = <0>;
        };

        ctrl_tab {
            bindings = <&kp LC(TAB)>;
            key-positions = <10 20>;
            layers = <0>;
        };

        zero_and_plus {
            bindings = <&kp EQUAL>;
            key-positions = <19 18 17>;
            layers = <0 2 1 3>;
        };

        bluetooth_moment {
            bindings = <&tog 6>;
            key-positions = <30 31 32>;
        };

        left_bootloader {
            bindings = <&bootloader>;
            key-positions = <0 1 4 2 31>;
            layers = <0>;
        };

        delete {
            bindings = <&kp DELETE>;
            key-positions = <27 28>;
            layers = <0>;
        };

        gaming_layer {
            bindings = <&tog 5>;
            key-positions = <0 1 2 3 4 5 6 7 8 9>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        alpha {
            bindings = <
&kp Q            &kp W  &kp E       &kp R                &kp T      &kp Y              &kp U                &kp I      &kp O    &kp P
&kp A            &kp S  &kp D       &kp F                &kp G      &kp H              &kp J                &kp K      &kp L    &kp SQT
&mouse_mode 1 Z  &kp X  &kp C       &kp V                &kp B      &kp N              &kp M                &kp COMMA  &kp DOT  &kp FSLH

                        &kp LSHIFT  &mouse_mode 2 SPACE  &kp LCTRL  &mouse_mode 4 ESC  &mouse_mode 7 ENTER  &kp BSPC
            >;
        };

        numbers_stuff {
            bindings = <
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &trans        &trans         &trans        &trans         &trans
&trans  &kp N5  &kp N6  &kp N7  &kp N8  &kp LEFT      &kp UP_ARROW   &kp DOWN      &kp RIGHT      &trans
&trans  &kp N9  &kp N0  &trans  &trans  &kp LC(LEFT)  &kp LC(RIGHT)  &kp LG(LEFT)  &kp LG(RIGHT)  &kp LG(UP_ARROW)

                &trans  &trans  &trans  &trans        &trans         &trans
            >;
        };

        symbols {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN    &kp HASH      &kp DOLLAR            &kp PERCENT            &trans          &trans               &trans          &trans           &trans
&kp CARET        &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_ARROW  &kp UP_ARROW         &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans
&trans           &trans         &trans        &trans                &trans                 &kp LC(LEFT)    &kp LC(RIGHT_ARROW)  &kp LG(LEFT)    &kp LG(RIGHT)    &kp LG(UP_ARROW)

                                &trans        &trans                &trans                 &trans          &trans               &trans
            >;
        };

        programming_symbols {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans  &trans
&trans  &trans  &trans  &trans  &trans  &kp PIPE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans  &trans

                &trans  &trans  &trans  &trans    &trans                &trans
            >;
        };

        mouse {
            bindings = <
&trans  &trans     &kp UP_ARROW  &trans     &trans  &trans          &trans        &trans          &trans           &trans
&trans  &mkp LCLK  &mkp MCLK     &mkp RCLK  &trans  &mmv MOVE_LEFT  &mmv MOVE_UP  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans
&trans  &trans     &kp DOWN      &trans     &trans  &trans          &trans        &trans          &trans           &trans

                   &trans        &trans     &trans  &trans          &trans        &trans
            >;
        };

        gaming {
            bindings = <
&kp ESC    &kp Q  &kp W      &kp E      &kp R      &none  &none  &none  &none  &to 0
&kp LSHFT  &kp A  &kp S      &kp D      &kp F      &none  &none  &none  &none  &kp RIGHT_GUI
&kp TAB    &kp Z  &kp X      &kp C      &kp V      &none  &none  &none  &none  &none

                  &kp LSHFT  &kp SPACE  &kp LCTRL  &none  &none  &none
            >;
        };

        bluetooth {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans        &trans        &trans        &trans        &trans

                &trans  &trans  &trans  &trans        &trans        &trans
            >;
        };

        misc {
            bindings = <
&trans            &trans          &trans        &trans             &trans           &trans  &trans  &trans  &trans  &trans
&kp LG(X)         &kp LEFT_GUI    &kp LEFT_ALT  &kp TAB            &trans           &trans  &trans  &trans  &trans  &trans
&kp C_PLAY_PAUSE  &kp C_PREVIOUS  &kp C_NEXT    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &trans  &trans  &trans  &trans  &trans

                                  &trans        &trans             &trans           &trans  &trans  &trans
            >;
        };
    };
};
